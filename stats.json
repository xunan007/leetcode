{"leetcode":{"easy":0,"hard":0,"medium":4,"shas":{"0116-populating-next-right-pointers-in-each-node":{"0116-populating-next-right-pointers-in-each-node.ts":"d26167c39a9710a53c1b3bbcaafd6949793638db","README.md":"04fdf61ef1b0d696b39681fc9e6dbade83bfe222","difficulty":"medium"},"0226-invert-binary-tree":{"0226-invert-binary-tree.ts":"87fecfd90931736009a1e00fc2137cdba9a32568","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8"},"README.md":{"":"427972abd62028e8a98d4cf56c0dbff823b878a9"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.ts":"fdbc490954cca790b89883d0b063c19d219698f4","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"stats.json":{"":"2045f97518a59be36e9fe5ac0f82e84d25599cfd"},"0654-maximum-binary-tree":{"0654-maximum-binary-tree.ts":"c201c296ce67037e0b14b6f2a0afd35d9f7672ad","README.md":"1d0f5f5c42e7c6b51579a85207621649c8b13d01","difficulty":"medium"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.ts":"cde270700f7018fabb0f826f311bcd80ab4b29af","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"}},"solved":4}}